name: "Build, Test, and Deploy to Cloud Run"

on:
  push:
    branches:
      - "master"

env:
  PROJECT_ID: "${{ secrets.PROJECT_ID }}"
  GCR_REGION: "${{ secrets.GCR_REGION }}"
  GCR_SERVICE: "${{ secrets.GCR_SERVICE }}"
  GAR_REGION: "${{ secrets.GAR_REGION }}"
  GAR_NAME: "${{ secrets.GAR_NAME }}"
  CHIA_SERVICE_ROUTE: "${{ secrets.CHIA_SERVICE_ROUTE }}"
  AUTH_SERVICE_ROUTE: "${{ secrets.AUTH_SERVICE_ROUTE }}"
  MRI_SERVICE_ROUTE: "${{ secrets.MRI_SERVICE_ROUTE }}"
  TREATMENT_PLAN_SERVICE_ROUTE: "${{ secrets.TREATMENT_PLAN_SERVICE_ROUTE }}"
  NOTIFICATION_SERVICE_ROUTE: "${{ secrets.NOTIFICATION_SERVICE_ROUTE }}"
  HOME_MQTT_SERVICE_ROUTE: "${{ secrets.HOME_MQTT_SERVICE_ROUTE }}"
  GATEWAY_PORT: "${{ secrets.GATEWAY_PORT }}"

jobs:
  # Test Job
  test:
    runs-on: "ubuntu-latest"
    
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
      
      - name: "Set up Node.js"
        uses: "actions/setup-node@v4"
        with:
          node-version: "20"

      - name: "Install dependencies"
        run: |
          npm install

      - name: "Run tests"
        run: |
          npm test

  # Deploy Job
  deploy:
    needs: test
    runs-on: "ubuntu-latest"

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Authenticate to GCP"
        id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_CREDS }}"

      - name: Set up Cloud SDK
        uses: "google-github-actions/setup-gcloud@v2"

      - name: "Docker Auth To GAR"
        run: |
          gcloud auth configure-docker "${{env.GAR_REGION}}-docker.pkg.dev"

      - name: "Build and Push To GAR"
        run: |-
          DOCKER_TAG="${{ env.GAR_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.GAR_NAME }}:${{ github.sha }}"
          docker build --tag "${DOCKER_TAG}" .
          docker push "${DOCKER_TAG}"

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.GCR_SERVICE }} \
            --image ${{ env.GAR_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.GAR_NAME }}:${{ github.sha }} \
            --platform managed \
            --region ${{ env.GCR_REGION }} \
            --port 8349 \
            --allow-unauthenticated \
            --set-env-vars "CHIA_SERVICE_ROUTE=${{ env.CHIA_SERVICE_ROUTE }}" \
            --set-env-vars "AUTH_SERVICE_ROUTE=${{ env.AUTH_SERVICE_ROUTE }}" \
            --set-env-vars "MRI_SERVICE_ROUTE=${{ env.MRI_SERVICE_ROUTE }}" \
            --set-env-vars "NOTIFICATION_SERVICE_ROUTE=${{ env.NOTIFICATION_SERVICE_ROUTE }}" \
            --set-env-vars "HOME_MQTT_SERVICE_ROUTE=${{ env.HOME_MQTT_SERVICE_ROUTE }}" \
            --set-env-vars "TREATMENT_PLAN_SERVICE_ROUTE=${{ env.TREATMENT_PLAN_SERVICE_ROUTE }}" \
            --set-env-vars "DEVICE_SERVICE_ROUTE=${{ env.DEVICE_SERVICE_ROUTE }}" \
            --set-env-vars "GATEWAY_PORT=${{ env.GATEWAY_PORT }}"

      - name: "Show output"
        run: |
          echo "Deployment URL: ${{ steps.deploy.outputs.url }}"
